name: Test

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint-and-test:
    name: "Lint and Test (Python ${{ matrix.python }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Build Rust module
        uses: PyO3/maturin-action@v1
        with:
          args: --out dist --interpreter python${{ matrix.python }}
          sccache: 'true'
          container: off
      - run: pip install -r requirements.txt
      - run: pip install dist/*
      - name: Verify
        run: just verify

  sdk-test-suite:
    runs-on: ubuntu-latest
    name: "Integration Test (Test tool ${{ matrix.sdk-test-suite }})"
    strategy:
      matrix:
        sdk-test-suite: [ "1.4" ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup sdk-test-suite
        run: wget --no-verbose https://github.com/restatedev/sdk-test-suite/releases/download/v${{ matrix.sdk-test-suite }}/restate-sdk-test-suite.jar

      # Build docker image
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: "test-services/Dockerfile"
          push: false
          load: true
          tags: restatedev/test-services:latest
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}

      # Run test suite
      - name: Run test suite
        run: java -jar restate-sdk-test-suite.jar run --report-dir=test-report --exclusions-file test-services/exclusions.yaml restatedev/test-services:latest

      # Upload logs and publish test result
      - uses: actions/upload-artifact@v4
        if: always() # Make sure this is run even when test fails
        with:
          name: test-report
          path: test-report
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            test-report/*/*.xml